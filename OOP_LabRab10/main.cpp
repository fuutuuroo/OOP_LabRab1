/* Вариант 12.
Создать класс Pair (пара чисел). Пара должна быть представлено двумя полями: 
типа int для первого числа и типа double для второго. 
Первое число при выводе на экран должно быть отделено от второго числа двоеточием. 
Реализовать:
- операции сравнения (<, >).
 - операция ++, которая работает следующим образом: 
 если форма операции префиксная, то увеличивается первое число, 
 если форма операции постфиксная, то увеличивается второе число.
Задание:
•	Удалить все записи большие заданного значения.
•	Увеличить все записи с заданным значением на число L.
•	Добавить K записей после записи с номером N. */

#include "Pair.h"
#include "file_work.h"

int main() {
	setlocale(LC_ALL, "RU");
	Pair p;
	int k, c;
	char file_name[30];
	do { 
		cout << "1.Создать файл";
		cout << "\n2.Вывести содержимое файла";
		cout << "\n3.Удалить записи из файла больше заданного значения";
		cout << "\n4.Увеличить все записи с заданным значением на число L";
		cout << "\n5.Добавить K записей после элемента с номером N";
		cout << "\n0.Выход\n";
		cout << "Ваш выбор: "; 
		cin >> c;
		switch (c)
		{
		case 1: cout << "Введите название файла: "; 
			cin >> file_name;			
			k = make_file(file_name);	//вызов функции для записи в файл
			if (k < 0)
				cout << "Не удалось создать файл!"; 
			break;
		case 2: cout << "Введите название файла: "; 
			cin >> file_name; 
			k = print_file(file_name);	//функция для печати файла
			if (k == 0)
				cout << "Файл пустой!\n"; 
			if (k < 0)
				cout << "Не удалось открыть файл!\n"; 
			break;
		case 3: cout << "Введите название файла: "; 
			cin >> file_name;
			int valueDelete;			//удалить все записи большие заданного значения
			cout << "Введите значение, записи больше него будут удалены: "; 
			cin >> valueDelete;
			k = deletePairs(file_name, valueDelete);
			if (k == 0)
				cout << "Файл пустой!\n";
			if (k < 0)
				cout << "Не удалось открыть файл!\n";
			break;
		case 4: cout << "Введите название файла: "; 
			cin >> file_name;
			int valueIncrease, L;		
			cout << "Введите значение, записи с которым будут увеличены: "; 
			cin >> valueIncrease;
			cout << "Введите число L: "; 
			cin >> L;
			k = increasePairs(file_name, valueIncrease, L);	//увеличить все записи с заданным значением на число L
			if (k == 0)
				cout << "Файл пустой!\n";
			if (k < 0)
				cout << "Не удалось открыть файл!\n";
			break;
		case 5: cout << "Введите название файла: "; 
			cin >> file_name;
			int N, K;
			Pair newPair;
			cout << "Введите номер N: "; 
			cin >> N;
			cout << "Введите К - количество записей для добавления: "; 
			cin >> K;
			cout << "Новая пара чисел:" << endl;
			cin >> newPair;
			k = add_file(file_name, N, newPair);	//добавить K записей после записи с номером N
			if (k > 0) {
				for (int i = 1; i < K; i++) {
					cout << "Новая пара чисел:" << endl;
					cin >> newPair;
					k = add_file(file_name, N + 1, newPair);
					N++;
				}
			}
			if (k == 0)
				cout << "Файл пустой!\n";
			if (k < 0)
				cout << "Не удалось открыть файл!\n";
			break;
		}
	} while (c != 0);
	return 0;
}